spring.data.mongodb.database=weather_forecast
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017


# management.endpoints.web.exposure.include=*

weather.current=http://api.openweathermap.org/data/2.5/weather?q=%s&appid=f5cc2f05fc1b619f5e0aabf75b4e2d9f
weather.past=http://api.openweathermap.org/data/2.5/weather?q=%s&appid=f5cc2f05fc1b619f5e0aabf75b4e2d9f
weather.future=http://api.openweathermap.org/data/2.5/weather?q=%s&appid=f5cc2f05fc1b619f5e0aabf75b4e2d9f

# kafka topics
app.kafka.producer.topic-current=weather.forecast.current
app.kafka.producer.topic-past=weather.forecast.past
app.kafka.producer.topic-future=weather.forecast.future
app.kafka.consumer.topic=weather.forecast.current,weather.forecast.past,weather.forecast.future

## default property for producer provided by the spring boot
spring.kafka.producer.bootstrap-servers=localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.admin.properties.bootstrap-servers=localhost:9092


## default property for consumer provided by the spring boot
spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.group-id=library-events-listener-group


weather.api.token=f5cc2f05fc1b619f5e0aabf75b4e2d9f

jwt.secret=user